//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace java.lang {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute("java.lang.Appendable")]
    public partial interface Appendable {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/CharSequence;)Ljava/lang/Appendable;")]
        global::java.lang.Appendable append(global::java.lang.CharSequence arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;")]
        global::java.lang.Appendable append(global::java.lang.CharSequence arg0, int arg1, int arg2);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(C)Ljava/lang/Appendable;")]
        global::java.lang.Appendable append(char arg0);
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class Appendable_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::java.lang.@__Appendable.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::java.lang.Appendable), typeof(global::java.lang.Appendable_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::java.lang.Appendable), typeof(global::java.lang.Appendable_))]
    internal sealed partial class @__Appendable : global::java.lang.Object, global::java.lang.Appendable {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_append0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_append1;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_append2;
        
        private @__Appendable(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::java.lang.@__Appendable.staticClass = @__class;
            global::java.lang.@__Appendable.j4n_append0 = @__env.GetMethodID(global::java.lang.@__Appendable.staticClass, "append", "(Ljava/lang/CharSequence;)Ljava/lang/Appendable;");
            global::java.lang.@__Appendable.j4n_append1 = @__env.GetMethodID(global::java.lang.@__Appendable.staticClass, "append", "(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;");
            global::java.lang.@__Appendable.j4n_append2 = @__env.GetMethodID(global::java.lang.@__Appendable.staticClass, "append", "(C)Ljava/lang/Appendable;");
        }
        
        public global::java.lang.Appendable append(global::java.lang.CharSequence arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.@__Appendable.j4n_append0, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.CharSequence>(@__env, arg0)));
            }
        }
        
        public global::java.lang.Appendable append(global::java.lang.CharSequence arg0, int arg1, int arg2) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 16)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.@__Appendable.j4n_append1, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.CharSequence>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(arg1), global::net.sf.jni4net.utils.Convertor.ParPrimC2J(arg2)));
            }
        }
        
        public global::java.lang.Appendable append(char arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__env.CallObjectMethodPtr(this, global::java.lang.@__Appendable.j4n_append2, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(arg0)));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Appendable);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "append", "append0", "(Ljava/lang/CharSequence;)Ljava/lang/Appendable;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "append", "append1", "(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "append", "append2", "(C)Ljava/lang/Appendable;"));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle append0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
            // (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.lang.Appendable @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Appendable>(@__env, @__real.append(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.CharSequence>(@__env, arg0)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle append1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, int arg1, int arg2) {
            // (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
            // (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.lang.Appendable @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Appendable>(@__env, @__real.append(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.CharSequence>(@__env, arg0), arg1, arg2));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle append2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, char arg0) {
            // (C)Ljava/lang/Appendable;
            // (C)Ljava/lang/Appendable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.lang.Appendable @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Appendable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Appendable>(@__env, @__real.append(arg0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::java.lang.@__Appendable(@__env);
            }
        }
    }
    #endregion
}
