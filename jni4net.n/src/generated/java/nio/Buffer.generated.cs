//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace java.nio {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaClassAttribute("java.nio.Buffer")]
    public partial class Buffer : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_limit0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_limit1;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_clear2;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_array3;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_arrayOffset4;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_hasArray5;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_isDirect6;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_position7;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_position8;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_remaining9;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_capacity10;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_mark11;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_reset12;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_flip13;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_hasRemaining14;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_isReadOnly15;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_rewind16;
        
        protected Buffer(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        public new static global::java.lang.Class _class {
            get {
                return global::java.nio.Buffer.staticClass;
            }
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::java.nio.Buffer.staticClass = @__class;
            global::java.nio.Buffer.j4n_limit0 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "limit", "(I)Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_limit1 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "limit", "()I");
            global::java.nio.Buffer.j4n_clear2 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "clear", "()Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_array3 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "array", "()Ljava/lang/Object;");
            global::java.nio.Buffer.j4n_arrayOffset4 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "arrayOffset", "()I");
            global::java.nio.Buffer.j4n_hasArray5 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "hasArray", "()Z");
            global::java.nio.Buffer.j4n_isDirect6 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "isDirect", "()Z");
            global::java.nio.Buffer.j4n_position7 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "position", "(I)Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_position8 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "position", "()I");
            global::java.nio.Buffer.j4n_remaining9 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "remaining", "()I");
            global::java.nio.Buffer.j4n_capacity10 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "capacity", "()I");
            global::java.nio.Buffer.j4n_mark11 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "mark", "()Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_reset12 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "reset", "()Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_flip13 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "flip", "()Ljava/nio/Buffer;");
            global::java.nio.Buffer.j4n_hasRemaining14 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "hasRemaining", "()Z");
            global::java.nio.Buffer.j4n_isReadOnly15 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "isReadOnly", "()Z");
            global::java.nio.Buffer.j4n_rewind16 = @__env.GetMethodID(global::java.nio.Buffer.staticClass, "rewind", "()Ljava/nio/Buffer;");
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(I)Ljava/nio/Buffer;")]
        public global::java.nio.Buffer limit(int arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_limit0, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(arg0)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        public int limit() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.nio.Buffer.j4n_limit1)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/nio/Buffer;")]
        public global::java.nio.Buffer clear() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_clear2));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/lang/Object;")]
        public virtual global::java.lang.Object array() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_array3));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        public virtual int arrayOffset() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.nio.Buffer.j4n_arrayOffset4)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        public virtual bool hasArray() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.nio.Buffer.j4n_hasArray5)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        public virtual bool isDirect() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.nio.Buffer.j4n_isDirect6)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(I)Ljava/nio/Buffer;")]
        public global::java.nio.Buffer position(int arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_position7, global::net.sf.jni4net.utils.Convertor.ParPrimC2J(arg0)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        public int position() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.nio.Buffer.j4n_position8)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        public int remaining() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.nio.Buffer.j4n_remaining9)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        public int capacity() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.nio.Buffer.j4n_capacity10)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/nio/Buffer;")]
        public global::java.nio.Buffer mark() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_mark11));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/nio/Buffer;")]
        public global::java.nio.Buffer reset() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_reset12));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/nio/Buffer;")]
        public global::java.nio.Buffer flip() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_flip13));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        public bool hasRemaining() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.nio.Buffer.j4n_hasRemaining14)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        public virtual bool isReadOnly() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.nio.Buffer.j4n_isReadOnly15)));
            }
        }
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/nio/Buffer;")]
        public global::java.nio.Buffer rewind() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.StrongJ2Cp<global::java.nio.Buffer>(@__env, @__env.CallObjectMethodPtr(this, global::java.nio.Buffer.j4n_rewind16));
            }
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::java.nio.Buffer(@__env);
            }
        }
    }
    #endregion
}
