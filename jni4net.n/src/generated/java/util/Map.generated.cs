//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace java.util {
    
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaInterfaceAttribute("java.util.Map")]
    public partial interface Map {
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object remove(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Z")]
        bool remove(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object get(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object put(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool equals(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Collection;")]
        global::java.util.Collection values();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        int hashCode();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()V")]
        void clear();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Z")]
        bool isEmpty();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object replace(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z")]
        bool replace(global::java.lang.Object arg0, global::java.lang.Object arg1, global::java.lang.Object arg2);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/util/function/BiFunction;)V")]
        void replaceAll(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()I")]
        int size();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Set;")]
        global::java.util.Set entrySet();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/util/Map;)V")]
        void putAll(global::java.util.Map arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object putIfAbsent(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/util/function/BiConsumer;)V")]
        void forEach(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("()Ljava/util/Set;")]
        global::java.util.Set keySet();
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;")]
        global::java.lang.Object compute(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;")]
        global::java.lang.Object computeIfAbsent(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;")]
        global::java.lang.Object computeIfPresent(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool containsKey(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;)Z")]
        bool containsValue(global::java.lang.Object arg0);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;")]
        global::java.lang.Object getOrDefault(global::java.lang.Object arg0, global::java.lang.Object arg1);
        
        [global::net.sf.jni4net.attributes.JavaMethodAttribute("(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/O" +
            "bject;")]
        global::java.lang.Object merge(global::java.lang.Object arg0, global::java.lang.Object arg1, global::java.lang.Object arg2);
    }
    #endregion
    
    #region Component Designer generated code 
    public partial class Map_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::java.util.@__Map.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::java.util.Map), typeof(global::java.util.Map_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::java.util.Map), typeof(global::java.util.Map_))]
    internal sealed partial class @__Map : global::java.lang.Object, global::java.util.Map {
        
        internal new static global::java.lang.Class staticClass;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_remove0;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_remove1;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_get2;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_put3;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_equals4;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_values5;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_hashCode6;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_clear7;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_isEmpty8;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_replace9;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_replace10;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_replaceAll11;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_size12;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_entrySet13;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_putAll14;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_putIfAbsent15;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_forEach16;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_keySet17;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_compute18;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_computeIfAbsent19;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_computeIfPresent20;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_containsKey21;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_containsValue22;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_getOrDefault23;
        
        internal static global::net.sf.jni4net.jni.MethodId j4n_merge24;
        
        private @__Map(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::java.util.@__Map.staticClass = @__class;
            global::java.util.@__Map.j4n_remove0 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "remove", "(Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_remove1 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "remove", "(Ljava/lang/Object;Ljava/lang/Object;)Z");
            global::java.util.@__Map.j4n_get2 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "get", "(Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_put3 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_equals4 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "equals", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map.j4n_values5 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "values", "()Ljava/util/Collection;");
            global::java.util.@__Map.j4n_hashCode6 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "hashCode", "()I");
            global::java.util.@__Map.j4n_clear7 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "clear", "()V");
            global::java.util.@__Map.j4n_isEmpty8 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "isEmpty", "()Z");
            global::java.util.@__Map.j4n_replace9 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "replace", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_replace10 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "replace", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z");
            global::java.util.@__Map.j4n_replaceAll11 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "replaceAll", "(Ljava/util/function/BiFunction;)V");
            global::java.util.@__Map.j4n_size12 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "size", "()I");
            global::java.util.@__Map.j4n_entrySet13 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "entrySet", "()Ljava/util/Set;");
            global::java.util.@__Map.j4n_putAll14 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "putAll", "(Ljava/util/Map;)V");
            global::java.util.@__Map.j4n_putIfAbsent15 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "putIfAbsent", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_forEach16 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "forEach", "(Ljava/util/function/BiConsumer;)V");
            global::java.util.@__Map.j4n_keySet17 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "keySet", "()Ljava/util/Set;");
            global::java.util.@__Map.j4n_compute18 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "compute", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_computeIfAbsent19 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "computeIfAbsent", "(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_computeIfPresent20 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "computeIfPresent", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_containsKey21 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "containsKey", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map.j4n_containsValue22 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "containsValue", "(Ljava/lang/Object;)Z");
            global::java.util.@__Map.j4n_getOrDefault23 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "getOrDefault", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;");
            global::java.util.@__Map.j4n_merge24 = @__env.GetMethodID(global::java.util.@__Map.staticClass, "merge", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/O" +
                    "bject;");
        }
        
        public global::java.lang.Object remove(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_remove0, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0)));
            }
        }
        
        public bool remove(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_remove1, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1))));
            }
        }
        
        public global::java.lang.Object get(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_get2, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0)));
            }
        }
        
        public global::java.lang.Object put(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_put3, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public bool equals(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_equals4, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0))));
            }
        }
        
        public global::java.util.Collection values() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Collection>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_values5));
            }
        }
        
        public int hashCode() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.util.@__Map.j4n_hashCode6)));
            }
        }
        
        public void clear() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            @__env.CallVoidMethod(this, global::java.util.@__Map.j4n_clear7);
            }
        }
        
        public bool isEmpty() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_isEmpty8)));
            }
        }
        
        public global::java.lang.Object replace(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_replace9, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public bool replace(global::java.lang.Object arg0, global::java.lang.Object arg1, global::java.lang.Object arg2) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 16)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_replace10, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg2))));
            }
        }
        
        public void replaceAll(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::java.util.@__Map.j4n_replaceAll11, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0));
            }
        }
        
        public int size() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return ((int)(@__env.CallIntMethod(this, global::java.util.@__Map.j4n_size12)));
            }
        }
        
        public global::java.util.Set entrySet() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Set>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_entrySet13));
            }
        }
        
        public void putAll(global::java.util.Map arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::java.util.@__Map.j4n_putAll14, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.util.Map>(@__env, arg0));
            }
        }
        
        public global::java.lang.Object putIfAbsent(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_putIfAbsent15, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public void forEach(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            @__env.CallVoidMethod(this, global::java.util.@__Map.j4n_forEach16, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0));
            }
        }
        
        public global::java.util.Set keySet() {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 10)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Set>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_keySet17));
            }
        }
        
        public global::java.lang.Object compute(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_compute18, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public global::java.lang.Object computeIfAbsent(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_computeIfAbsent19, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public global::java.lang.Object computeIfPresent(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_computeIfPresent20, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public bool containsKey(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_containsKey21, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0))));
            }
        }
        
        public bool containsValue(global::java.lang.Object arg0) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 12)){
            return ((bool)(@__env.CallBooleanMethod(this, global::java.util.@__Map.j4n_containsValue22, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0))));
            }
        }
        
        public global::java.lang.Object getOrDefault(global::java.lang.Object arg0, global::java.lang.Object arg1) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 14)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_getOrDefault23, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1)));
            }
        }
        
        public global::java.lang.Object merge(global::java.lang.Object arg0, global::java.lang.Object arg1, global::java.lang.Object arg2) {
            global::net.sf.jni4net.jni.JNIEnv @__env = this.Env;
            using(new global::net.sf.jni4net.jni.LocalFrame(@__env, 16)){
            return global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, @__env.CallObjectMethodPtr(this, global::java.util.@__Map.j4n_merge24, global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg1), global::net.sf.jni4net.utils.Convertor.ParFullC2J<global::java.lang.Object>(@__env, arg2)));
            }
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Map);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "remove", "remove0", "(Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "remove", "remove1", "(Ljava/lang/Object;Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "get", "get2", "(Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "put", "put3", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "equals", "equals4", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "values", "values5", "()Ljava/util/Collection;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "hashCode", "hashCode6", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "clear", "clear7", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isEmpty", "isEmpty8", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "replace", "replace9", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "replace", "replace10", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "replaceAll", "replaceAll11", "(Ljava/util/function/BiFunction;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "size", "size12", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "entrySet", "entrySet13", "()Ljava/util/Set;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "putAll", "putAll14", "(Ljava/util/Map;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "putIfAbsent", "putIfAbsent15", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "forEach", "forEach16", "(Ljava/util/function/BiConsumer;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "keySet", "keySet17", "()Ljava/util/Set;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "compute", "compute18", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "computeIfAbsent", "computeIfAbsent19", "(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "computeIfPresent", "computeIfPresent20", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "containsKey", "containsKey21", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "containsValue", "containsValue22", "(Ljava/lang/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getOrDefault", "getOrDefault23", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "merge", "merge24", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/O" +
                        "bject;"));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle remove0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.remove(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool remove1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Z
            // (Ljava/lang/Object;Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.remove(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle get2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.get(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle put3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.put(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool equals4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.equals(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle values5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/util/Collection;
            // ()Ljava/util/Collection;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.util.Collection>(@__env, @__real.values());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int hashCode6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((int)(@__real.hashCode()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void clear7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__real.clear();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool isEmpty8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.isEmpty()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle replace9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.replace(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool replace10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1, global::net.sf.jni4net.utils.JniLocalHandle arg2) {
            // (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
            // (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.replace(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg2))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void replaceAll11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/util/function/BiFunction;)V
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__real.replaceAll(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static int size12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((int)(@__real.size()));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle entrySet13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/util/Set;
            // ()Ljava/util/Set;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.util.Set>(@__env, @__real.entrySet());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void putAll14(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/util/Map;)V
            // (Ljava/util/Map;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__real.putAll(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, arg0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle putIfAbsent15(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.putIfAbsent(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void forEach16(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/util/function/BiConsumer;)V
            // (Ljava/lang/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__real.forEach(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle keySet17(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Ljava/util/Set;
            // ()Ljava/util/Set;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.util.Set>(@__env, @__real.keySet());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle compute18(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.compute(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle computeIfAbsent19(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.computeIfAbsent(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle computeIfPresent20(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.computeIfPresent(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool containsKey21(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.containsKey(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool containsValue22(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0) {
            // (Ljava/lang/Object;)Z
            // (Ljava/lang/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = ((bool)(@__real.containsValue(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle getOrDefault23(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1) {
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.getOrDefault(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle merge24(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle arg0, global::net.sf.jni4net.utils.JniLocalHandle arg1, global::net.sf.jni4net.utils.JniLocalHandle arg2) {
            // (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
            // (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::java.util.Map @__real = global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.util.Map>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::java.lang.Object>(@__env, @__real.merge(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg0), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg1), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::java.lang.Object>(@__env, arg2)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::java.util.@__Map(@__env);
            }
        }
    }
    #endregion
}
