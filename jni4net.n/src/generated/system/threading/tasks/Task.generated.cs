//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Threading.Tasks {
    
    
    #region Component Designer generated code 
    public partial class Task_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::System.Threading.Tasks.@__Task.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::System.Threading.Tasks.Task), typeof(global::System.Threading.Tasks.Task_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::System.Threading.Tasks.Task), typeof(global::System.Threading.Tasks.Task_))]
    internal sealed partial class @__Task : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__Task(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::System.Threading.Tasks.@__Task.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Task);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isCompleted", "IsCompleted0", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getAsyncWaitHandle", "AsyncWaitHandle1", "()Lsystem/MarshalByRefObject;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getAsyncState", "AsyncState2", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCompletedSynchronously", "CompletedSynchronously3", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Dispose", "Dispose4", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Start", "Start5", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Start", "Start6", "(Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "RunSynchronously", "RunSynchronously7", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "RunSynchronously", "RunSynchronously8", "(Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getId", "Id9", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCurrentId", "CurrentId10", "()Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getException", "Exception11", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getStatus", "Status12", "()Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isCanceled", "IsCanceled13", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCreationOptions", "CreationOptions14", "()Lsystem/Enum;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getFactory", "Factory15", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCompletedTask", "CompletedTask16", "()Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isFaulted", "IsFaulted17", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetAwaiter", "GetAwaiter18", "()Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ConfigureAwait", "ConfigureAwait19", "(Z)Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Yield", "Yield20", "()Lsystem/ValueType;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Wait", "Wait21", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Wait", "Wait22", "(Lsystem/ValueType;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Wait", "Wait23", "(I)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Wait", "Wait24", "(ILsystem/ValueType;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith25", "(Lsystem/MulticastDelegate;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith26", "(Lsystem/MulticastDelegate;Lsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith27", "(Lsystem/MulticastDelegate;Lsystem/Object;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith28", "(Lsystem/MulticastDelegate;Lsystem/Enum;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith29", "(Lsystem/MulticastDelegate;Lsystem/ValueType;Lsystem/Enum;Lsystem/Object;)Lsystem" +
                        "/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith30", "(Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;)Lsystem/threading/ta" +
                        "sks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith31", "(Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/Object;)Lsystem/threading/tasks" +
                        "/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith32", "(Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/Enum;)Lsystem/threading/tasks/T" +
                        "ask;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContinueWith", "ContinueWith33", "(Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;Lsystem/Enum;Lsystem/" +
                        "Object;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAll", "WaitAll34", "([Lsystem/threading/tasks/Task;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAll", "WaitAll35", "([Lsystem/threading/tasks/Task;Lsystem/ValueType;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAll", "WaitAll36", "([Lsystem/threading/tasks/Task;I)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAll", "WaitAll37", "([Lsystem/threading/tasks/Task;ILsystem/ValueType;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAny", "WaitAny38", "([Lsystem/threading/tasks/Task;)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAny", "WaitAny39", "([Lsystem/threading/tasks/Task;Lsystem/ValueType;)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAny", "WaitAny40", "([Lsystem/threading/tasks/Task;I)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WaitAny", "WaitAny41", "([Lsystem/threading/tasks/Task;ILsystem/ValueType;)I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "FromException", "FromException42", "(Lsystem/Exception;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Run", "Run43", "(Lsystem/MulticastDelegate;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Run", "Run44", "(Lsystem/MulticastDelegate;Lsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Delay", "Delay45", "(Lsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Delay", "Delay46", "(Lsystem/ValueType;Lsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Delay", "Delay47", "(I)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Delay", "Delay48", "(ILsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WhenAll", "WhenAll49", "(Lsystem/collections/IEnumerable;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WhenAll", "WhenAll50", "([Lsystem/threading/tasks/Task;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WhenAny", "WhenAny51", "([Lsystem/threading/tasks/Task;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "WhenAny", "WhenAny52", "(Lsystem/collections/IEnumerable;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "FromCanceled", "FromCanceled53", "(Lsystem/ValueType;)Lsystem/threading/tasks/Task;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask0", "__ctorTask0", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask1", "__ctorTask1", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/ValueType;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask2", "__ctorTask2", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/Enum;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask3", "__ctorTask3", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/ValueType;Lsyste" +
                        "m/Enum;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask4", "__ctorTask4", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask5", "__ctorTask5", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/V" +
                        "alueType;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask6", "__ctorTask6", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/E" +
                        "num;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorTask7", "__ctorTask7", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/V" +
                        "alueType;Lsystem/Enum;)V"));
            return methods;
        }
        
        private static bool IsCompleted0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(((global::System.IAsyncResult)(@__real)).IsCompleted));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle AsyncWaitHandle1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/MarshalByRefObject;
            // ()LSystem/Threading/WaitHandle;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.WaitHandle>(@__env, ((global::System.IAsyncResult)(@__real)).AsyncWaitHandle);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle AsyncState2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<object>(@__env, ((global::System.IAsyncResult)(@__real)).AsyncState);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool CompletedSynchronously3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(((global::System.IAsyncResult)(@__real)).CompletedSynchronously));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Dispose4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            ((global::System.IDisposable)(@__real)).Dispose();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void Start5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__real.Start();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void Start6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/Object;)V
            // (LSystem/Threading/Tasks/TaskScheduler;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__real.Start(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void RunSynchronously7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__real.RunSynchronously();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void RunSynchronously8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/Object;)V
            // (LSystem/Threading/Tasks/TaskScheduler;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__real.RunSynchronously(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static int Id9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((int)(@__real.Id));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle CurrentId10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class) {
            // ()Lsystem/ValueType;
            // ()[[LSystem/Nullable`1;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Nullable<int>>(@__env, global::System.Threading.Tasks.Task.CurrentId);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Exception11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/AggregateException;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.AggregateException>(@__env, @__real.Exception);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Status12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Enum;
            // ()LSystem/Threading/Tasks/TaskStatus;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.TaskStatus>(@__env, @__real.Status);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool IsCanceled13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(@__real.IsCanceled));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle CreationOptions14(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Enum;
            // ()LSystem/Threading/Tasks/TaskCreationOptions;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.TaskCreationOptions>(@__env, @__real.CreationOptions);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Factory15(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class) {
            // ()Lsystem/Object;
            // ()LSystem/Threading/Tasks/TaskFactory;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.TaskFactory>(@__env, global::System.Threading.Tasks.Task.Factory);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle CompletedTask16(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class) {
            // ()Lsystem/threading/tasks/Task;
            // ()LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.CompletedTask);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool IsFaulted17(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(@__real.IsFaulted));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle GetAwaiter18(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/ValueType;
            // ()LSystem/Runtime/CompilerServices/TaskAwaiter;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Runtime.CompilerServices.TaskAwaiter>(@__env, @__real.GetAwaiter());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ConfigureAwait19(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, bool continueOnCapturedContext) {
            // (Z)Lsystem/ValueType;
            // (Z)LSystem/Runtime/CompilerServices/ConfiguredTaskAwaitable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Runtime.CompilerServices.ConfiguredTaskAwaitable>(@__env, @__real.ConfigureAwait(continueOnCapturedContext));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Yield20(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class) {
            // ()Lsystem/ValueType;
            // ()LSystem/Runtime/CompilerServices/YieldAwaitable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Runtime.CompilerServices.YieldAwaitable>(@__env, global::System.Threading.Tasks.Task.Yield());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Wait21(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__real.Wait();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool Wait22(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle timeout) {
            // (Lsystem/ValueType;)Z
            // (LSystem/TimeSpan;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(@__real.Wait(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.TimeSpan>(@__env, timeout))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool Wait23(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int millisecondsTimeout) {
            // (I)Z
            // (I)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(@__real.Wait(millisecondsTimeout)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool Wait24(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int millisecondsTimeout, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (ILsystem/ValueType;)Z
            // (ILSystem/Threading/CancellationToken;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = ((bool)(@__real.Wait(millisecondsTimeout, global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith25(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction) {
            // (Lsystem/MulticastDelegate;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Action`1;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task>>(@__env, continuationAction)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith26(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/MulticastDelegate;Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Action`1;LSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith27(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Action`1;LSystem/Threading/Tasks/TaskScheduler;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith28(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle continuationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/Enum;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Action`1;LSystem/Threading/Tasks/TaskContinuationOptions;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskContinuationOptions>(@__env, continuationOptions)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith29(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken, global::net.sf.jni4net.utils.JniLocalHandle continuationOptions, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/MulticastDelegate;Lsystem/ValueType;Lsystem/Enum;Lsystem/Object;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Action`1;LSystem/Threading/CancellationToken;LSystem/Threading/Tasks/TaskContinuationOptions;LSystem/Threading/Tasks/TaskScheduler;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskContinuationOptions>(@__env, continuationOptions), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith30(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // ([[[LSystem/Action`2;LSystem/Object;LSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task, object>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith31(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/Object;)Lsystem/threading/tasks/Task;
            // ([[[LSystem/Action`2;LSystem/Object;LSystem/Threading/Tasks/TaskScheduler;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task, object>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith32(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle continuationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/Enum;)Lsystem/threading/tasks/Task;
            // ([[[LSystem/Action`2;LSystem/Object;LSystem/Threading/Tasks/TaskContinuationOptions;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task, object>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskContinuationOptions>(@__env, continuationOptions)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle ContinueWith33(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle continuationAction, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken, global::net.sf.jni4net.utils.JniLocalHandle continuationOptions, global::net.sf.jni4net.utils.JniLocalHandle scheduler) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;Lsystem/Enum;Lsystem/Object;)Lsystem/threading/tasks/Task;
            // ([[[LSystem/Action`2;LSystem/Object;LSystem/Threading/CancellationToken;LSystem/Threading/Tasks/TaskContinuationOptions;LSystem/Threading/Tasks/TaskScheduler;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Threading.Tasks.Task @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.Task>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, @__real.ContinueWith(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<System.Threading.Tasks.Task, object>>(@__env, continuationAction), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskContinuationOptions>(@__env, continuationOptions), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskScheduler>(@__env, scheduler)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void WaitAll34(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // ([Lsystem/threading/tasks/Task;)V
            // ([LSystem/Threading/Tasks/Task;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task.WaitAll(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool WaitAll35(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, global::net.sf.jni4net.utils.JniLocalHandle timeout) {
            // ([Lsystem/threading/tasks/Task;Lsystem/ValueType;)Z
            // ([LSystem/Threading/Tasks/Task;LSystem/TimeSpan;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            @__return = ((bool)(global::System.Threading.Tasks.Task.WaitAll(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.TimeSpan>(@__env, timeout))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool WaitAll36(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, int millisecondsTimeout) {
            // ([Lsystem/threading/tasks/Task;I)Z
            // ([LSystem/Threading/Tasks/Task;I)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            @__return = ((bool)(global::System.Threading.Tasks.Task.WaitAll(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), millisecondsTimeout)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool WaitAll37(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, int millisecondsTimeout, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // ([Lsystem/threading/tasks/Task;ILsystem/ValueType;)Z
            // ([LSystem/Threading/Tasks/Task;ILSystem/Threading/CancellationToken;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            @__return = ((bool)(global::System.Threading.Tasks.Task.WaitAll(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), millisecondsTimeout, global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int WaitAny38(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // ([Lsystem/threading/tasks/Task;)I
            // ([LSystem/Threading/Tasks/Task;)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::System.Threading.Tasks.Task.WaitAny(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int WaitAny39(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, global::net.sf.jni4net.utils.JniLocalHandle timeout) {
            // ([Lsystem/threading/tasks/Task;Lsystem/ValueType;)I
            // ([LSystem/Threading/Tasks/Task;LSystem/TimeSpan;)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::System.Threading.Tasks.Task.WaitAny(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.TimeSpan>(@__env, timeout))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int WaitAny40(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, int millisecondsTimeout) {
            // ([Lsystem/threading/tasks/Task;I)I
            // ([LSystem/Threading/Tasks/Task;I)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::System.Threading.Tasks.Task.WaitAny(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), millisecondsTimeout)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static int WaitAny41(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks, int millisecondsTimeout, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // ([Lsystem/threading/tasks/Task;ILsystem/ValueType;)I
            // ([LSystem/Threading/Tasks/Task;ILSystem/Threading/CancellationToken;)I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            @__return = ((int)(global::System.Threading.Tasks.Task.WaitAny(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks), millisecondsTimeout, global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle FromException42(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle exception) {
            // (Lsystem/Exception;)Lsystem/threading/tasks/Task;
            // (LSystem/Exception;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.FromException(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Exception>(@__env, exception)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Run43(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle action) {
            // (Lsystem/MulticastDelegate;)Lsystem/threading/tasks/Task;
            // (LSystem/Action;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Run(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Run44(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/MulticastDelegate;Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // (LSystem/Action;LSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Run(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Delay45(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle delay) {
            // (Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // (LSystem/TimeSpan;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Delay(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.TimeSpan>(@__env, delay)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Delay46(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle delay, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/ValueType;Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // (LSystem/TimeSpan;LSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Delay(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.TimeSpan>(@__env, delay), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Delay47(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, int millisecondsDelay) {
            // (I)Lsystem/threading/tasks/Task;
            // (I)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Delay(millisecondsDelay));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Delay48(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, int millisecondsDelay, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (ILsystem/ValueType;)Lsystem/threading/tasks/Task;
            // (ILSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.Delay(millisecondsDelay, global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle WhenAll49(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // (Lsystem/collections/IEnumerable;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Collections/Generic/IEnumerable`1;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.WhenAll(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>>(@__env, tasks)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle WhenAll50(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // ([Lsystem/threading/tasks/Task;)Lsystem/threading/tasks/Task;
            // ([LSystem/Threading/Tasks/Task;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.WhenAll(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle WhenAny51(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // ([Lsystem/threading/tasks/Task;)Lsystem/threading/tasks/Task;
            // ([LSystem/Threading/Tasks/Task;)[[LSystem/Threading/Tasks/Task`1;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task<System.Threading.Tasks.Task>>(@__env, global::System.Threading.Tasks.Task.WhenAny(global::net.sf.jni4net.utils.Convertor.ArrayStrongJp2C<global::System.Threading.Tasks.Task[], global::System.Threading.Tasks.Task>(@__env, tasks)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle WhenAny52(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle tasks) {
            // (Lsystem/collections/IEnumerable;)Lsystem/threading/tasks/Task;
            // ([[LSystem/Collections/Generic/IEnumerable`1;)[[LSystem/Threading/Tasks/Task`1;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task<System.Threading.Tasks.Task>>(@__env, global::System.Threading.Tasks.Task.WhenAny(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>>(@__env, tasks)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle FromCanceled53(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/ValueType;)Lsystem/threading/tasks/Task;
            // (LSystem/Threading/CancellationToken;)LSystem/Threading/Tasks/Task;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Threading.Tasks.Task>(@__env, global::System.Threading.Tasks.Task.FromCanceled(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void @__ctorTask0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action) {
            // (Lsystem/MulticastDelegate;)V
            // (LSystem/Action;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/MulticastDelegate;Lsystem/ValueType;)V
            // (LSystem/Action;LSystem/Threading/CancellationToken;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle creationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/Enum;)V
            // (LSystem/Action;LSystem/Threading/Tasks/TaskCreationOptions;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskCreationOptions>(@__env, creationOptions));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken, global::net.sf.jni4net.utils.JniLocalHandle creationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/ValueType;Lsystem/Enum;)V
            // (LSystem/Action;LSystem/Threading/CancellationToken;LSystem/Threading/Tasks/TaskCreationOptions;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action>(@__env, action), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskCreationOptions>(@__env, creationOptions));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle state) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;)V
            // ([[LSystem/Action`1;LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<object>>(@__env, action), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;)V
            // ([[LSystem/Action`1;LSystem/Object;LSystem/Threading/CancellationToken;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<object>>(@__env, action), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle creationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/Enum;)V
            // ([[LSystem/Action`1;LSystem/Object;LSystem/Threading/Tasks/TaskCreationOptions;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<object>>(@__env, action), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskCreationOptions>(@__env, creationOptions));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorTask7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle action, global::net.sf.jni4net.utils.JniLocalHandle state, global::net.sf.jni4net.utils.JniLocalHandle cancellationToken, global::net.sf.jni4net.utils.JniLocalHandle creationOptions) {
            // (Lsystem/MulticastDelegate;Lsystem/Object;Lsystem/ValueType;Lsystem/Enum;)V
            // ([[LSystem/Action`1;LSystem/Object;LSystem/Threading/CancellationToken;LSystem/Threading/Tasks/TaskCreationOptions;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Threading.Tasks.Task @__real = new global::System.Threading.Tasks.Task(global::net.sf.jni4net.utils.Convertor.StrongJ2CpDelegate<global::System.Action<object>>(@__env, action), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, state), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.CancellationToken>(@__env, cancellationToken), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Threading.Tasks.TaskCreationOptions>(@__env, creationOptions));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::System.Threading.Tasks.@__Task(@__env);
            }
        }
    }
    #endregion
}
